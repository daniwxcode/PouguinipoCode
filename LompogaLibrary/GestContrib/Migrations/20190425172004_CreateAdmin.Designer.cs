// <auto-generated />
using System;
using GestContrib.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestContrib.Migrations
{
    [DbContext(typeof(Contexte))]
    [Migration("20190425172004_CreateAdmin")]
    partial class CreateAdmin
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LompogaLibrary.Administation.Droits", b =>
                {
                    b.Property<int>("IDdroit");

                    b.Property<DateTime>("DateCréation")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DerniereModification")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<bool>("EtatDroit");

                    b.Property<int>("IdCreateur");

                    b.Property<string>("LibelleDroit")
                        .IsRequired();

                    b.Property<int>("idModificateur");

                    b.HasKey("IDdroit");

                    b.ToTable("Droits","Admin");
                });

            modelBuilder.Entity("LompogaLibrary.Administation.Habilitations", b =>
                {
                    b.Property<int>("IdDroit")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCréation")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DerniereModification")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int?>("DroitsIDdroit");

                    b.Property<bool>("EtatHabilitations");

                    b.Property<int>("IdCreateur");

                    b.Property<int?>("ProfilIDProfil");

                    b.Property<int>("idModificateur");

                    b.HasKey("IdDroit");

                    b.HasIndex("DroitsIDdroit");

                    b.HasIndex("ProfilIDProfil");

                    b.ToTable("Habilitations");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Habilitations");
                });

            modelBuilder.Entity("LompogaLibrary.Administation.Profil", b =>
                {
                    b.Property<int>("IDProfil")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCréation")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DerniereModification")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int>("IdCreateur");

                    b.Property<string>("Libelle")
                        .IsRequired();

                    b.Property<int?>("ProfilSuperieurIDProfil");

                    b.Property<int?>("ProfilSupérieurID");

                    b.Property<bool>("activer");

                    b.Property<int>("idModificateur");

                    b.HasKey("IDProfil");

                    b.HasIndex("ProfilSuperieurIDProfil");

                    b.ToTable("Profils");
                });

            modelBuilder.Entity("LompogaLibrary.Localisation.Quartier", b =>
                {
                    b.Property<int>("QuartierID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomQuartier")
                        .IsRequired();

                    b.HasKey("QuartierID");

                    b.ToTable("Quariers","Loc");
                });

            modelBuilder.Entity("LompogaLibrary.Personne", b =>
                {
                    b.Property<int>("PersonneID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Civilite");

                    b.Property<DateTime>("DateCréation")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateDeNaissance");

                    b.Property<DateTime>("DerniereModification")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Domicile")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Email");

                    b.Property<int>("IdCreateur");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("NomMere")
                        .IsRequired()
                        .HasMaxLength(75);

                    b.Property<string>("NomPere")
                        .IsRequired()
                        .HasMaxLength(75);

                    b.Property<string>("Prénom")
                        .IsRequired()
                        .HasMaxLength(75);

                    b.Property<int>("QuartierID");

                    b.Property<string>("Telephone")
                        .IsRequired();

                    b.Property<int>("idModificateur");

                    b.HasKey("PersonneID");

                    b.HasIndex("QuartierID");

                    b.ToTable("Personnes","Ident");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Personne");
                });

            modelBuilder.Entity("LompogaLibrary.Administation.HabilitationProfil", b =>
                {
                    b.HasBaseType("LompogaLibrary.Administation.Habilitations");

                    b.Property<int>("IdProfil");

                    b.Property<int?>("UtilisateurPersonneID");

                    b.HasIndex("IdProfil");

                    b.HasIndex("UtilisateurPersonneID");

                    b.ToTable("HabilitationProfil","Admin");

                    b.HasDiscriminator().HasValue("HabilitationProfil");
                });

            modelBuilder.Entity("LompogaLibrary.Administation.HabilitationSpéciale", b =>
                {
                    b.HasBaseType("LompogaLibrary.Administation.Habilitations");

                    b.Property<DateTime>("DateDebut");

                    b.Property<DateTime>("DateFin");

                    b.Property<int>("IdUtilisateur");

                    b.Property<int?>("UtilisateurPersonneID")
                        .HasColumnName("HabilitationSpéciale_UtilisateurPersonneID");

                    b.HasIndex("UtilisateurPersonneID");

                    b.ToTable("HabilitationSpeciale","Admin");

                    b.HasDiscriminator().HasValue("HabilitationSpéciale");
                });

            modelBuilder.Entity("LompogaLibrary.Administation.Agent", b =>
                {
                    b.HasBaseType("LompogaLibrary.Personne");

                    b.Property<string>("Poste")
                        .IsRequired();

                    b.ToTable("Agent","Admin");

                    b.HasDiscriminator().HasValue("Agent");
                });

            modelBuilder.Entity("LompogaLibrary.Administation.Utilisateur", b =>
                {
                    b.HasBaseType("LompogaLibrary.Administation.Agent");

                    b.Property<bool>("EstActif");

                    b.Property<string>("NomUtilisateur")
                        .IsRequired();

                    b.Property<string>("motDePasse")
                        .IsRequired();

                    b.ToTable("Utilisateur","Admin");

                    b.HasDiscriminator().HasValue("Utilisateur");
                });

            modelBuilder.Entity("LompogaLibrary.Administation.Habilitations", b =>
                {
                    b.HasOne("LompogaLibrary.Administation.Droits", "Droits")
                        .WithMany("habilitations")
                        .HasForeignKey("DroitsIDdroit");

                    b.HasOne("LompogaLibrary.Administation.Profil")
                        .WithMany("Habilitations")
                        .HasForeignKey("ProfilIDProfil");
                });

            modelBuilder.Entity("LompogaLibrary.Administation.Profil", b =>
                {
                    b.HasOne("LompogaLibrary.Administation.Profil", "ProfilSuperieur")
                        .WithMany("profilsSubordonnées")
                        .HasForeignKey("ProfilSuperieurIDProfil");
                });

            modelBuilder.Entity("LompogaLibrary.Personne", b =>
                {
                    b.HasOne("LompogaLibrary.Localisation.Quartier", "Quartier")
                        .WithMany()
                        .HasForeignKey("QuartierID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LompogaLibrary.Administation.HabilitationProfil", b =>
                {
                    b.HasOne("LompogaLibrary.Administation.Profil", "Profil")
                        .WithMany()
                        .HasForeignKey("IdProfil")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LompogaLibrary.Administation.Utilisateur")
                        .WithMany("HabilitationsProfil")
                        .HasForeignKey("UtilisateurPersonneID");
                });

            modelBuilder.Entity("LompogaLibrary.Administation.HabilitationSpéciale", b =>
                {
                    b.HasOne("LompogaLibrary.Administation.Utilisateur", "Utilisateur")
                        .WithMany("HabilitationSpéciales")
                        .HasForeignKey("UtilisateurPersonneID");
                });
#pragma warning restore 612, 618
        }
    }
}
